Exemple d'implémentation 
/**
 * Recherche un code dans la terminologie spécifiée
 * @param {string} system - Système de terminologie (ex: "CIM-10", "CCAM")
 * @param {string} code - Code à rechercher
 * @returns {Promise} Informations sur le code trouvé
 */
async function findCodeInTerminology(system, code) {
  // Vérifier dans le cache d'abord
  const cacheKey = `${system}:${code}`;
  if (terminologyCache.has(cacheKey)) {
    return terminologyCache.get(cacheKey);
  }
  
  // Construire le chemin du fichier selon le système
  const systemFileName = getSystemFileName(system);
  const filePath = path.join(__dirname, 'french_terminology', systemFileName);
  
  try {
    // Lire le fichier de terminologie
    const terminologyData = JSON.parse(await fs.promises.readFile(filePath, 'utf8'));
    
    // Rechercher le code
    const codeEntry = terminologyData.concepts.find(entry => entry.code === code);
    
    if (codeEntry) {
      // Mettre en cache pour les futures requêtes
      terminologyCache.set(cacheKey, codeEntry);
      return codeEntry;
    }
    
    return null;
  } catch (error) {
    console.error(`Erreur lors de la recherche du code ${code} dans ${system}:`, error);
    return null;
  }
}
        
        
Mise à jour des terminologies 

        
Le système inclut des scripts de mise à jour des terminologies qui peuvent être exécutés pour mettre à jour les données sans nécessiter une réinstallation complète :


        
        

          
python get_french_terminology.py # Télécharge les dernières versions des terminologies


          
python extract_french_systems.py # Extrait et formate les données pour l'utilisation dans FHIRHub


        

        
        

          
Astuce : Pour les déploiements en environnement sécurisé sans accès Internet, vous pouvez précharger les fichiers de terminologie et les inclure dans votre package d'installation.


        

        
        
Extension du système de terminologie 

        
Le système de terminologie peut être étendu pour prendre en charge des nomenclatures spécifiques à un établissement ou à une région :


        
        

          
Créez un nouveau fichier JSON dans le format standard dans le répertoire french_terminology/.

          
Ajoutez une entrée dans le fichier ans_terminology_systems.json pour référencer votre nouvelle terminologie.

          
Redémarrez l'application pour charger la nouvelle terminologie.

        

      
      
      

        Prérequis et installation 
        
FHIRHub est conçu pour être facilement déployable avec un minimum de dépendances.


        
        
Configuration requise 

        

          
Node.js version 18.x ou 20.x (v20.15.1 recommandée) - attention, problèmes connus avec Node.js v22

          
SQLite3 (inclus, ne nécessite pas d'installation séparée)

          
OS : Windows, macOS ou Linux

          
RAM : 2 Go minimum, 4 Go recommandé

          
Espace disque : 200 Mo minimum

          
Navigateur : Chrome, Firefox, Edge ou Safari récent

        

        
        
Installation 

        
L'installation de FHIRHub est simple et ne nécessite que quelques étapes :


        
        

          
Décompressez l'archive dans le dossier de votre choix

          
Ouvrez un terminal dans ce dossier

          
Exécutez npm install pour installer les dépendances

          
Exécutez bash start.sh pour démarrer le serveur

          
Accédez à http://localhost:5000 dans votre navigateur

        

        
        

          
Note : Lors du premier démarrage, le système crée automatiquement un utilisateur administrateur avec les identifiants par défaut : admin / adminfhirhub. Il est fortement recommandé de changer ce mot de passe après la première connexion.


        

        
        
Sauvegarde 

        
Pour sauvegarder vos données, il suffit de copier le fichier data/fhirhub.db qui contient toute la base de données (utilisateurs, applications, clés API, logs).


      

      
      

    
  
  
  

    

        © 2025 FHIRHub - Service de conversion HL7 vers FHIR
      
Documentation
API Reference

  

  
  
