MISSION POUR IA : REPRISE DU PROJET FHIRHUB
1. REPARTIR À ZÉRO
Supprimer tout fichier existant qui n’est pas directement nécessaire au fonctionnement :

Base de code.

Dockerfile.

Compose.

API Express.

SQLite local.

Pas de dépendances externes inutiles.
(Pas de Supabase, pas de Firebase, rien d’autre.)

2. CONSTRUIRE UN SERVEUR API EXPRESS EN NODE + TYPESCRIPT
Fonctionnalités minimales :

/api/v1/convert :

POST un texte ou fichier HL7.

Convertir en FHIR France ANF (Conversion simple).

Retourner le JSON de l'objet FHIR en réponse immédiate.

/api/v1/applications :

CRUD pour Applications (Create, Read, Update, Delete).

Chaque Application doit avoir :

Nom (obligatoire)

Type (optionnel)

Description (optionnel)

is_active (boolean, par défaut true)

Propriétés personnalisées (clé/valeur libre, de type string)

CORS domain (optionnel, chaîne de caractères)

/api/v1/api-keys :

Génération d’une clé API unique pour une Application existante.

Stocker dans la base :

id

application_id

clé hashée

date de création

date dernière utilisation

état is_revoked (boolean)

3. MOTEUR DE TEST LIVE (FRONTEND MINIMAL)
Upload ou coller un fichier HL7 brut.

Bouton “Convertir”.

Affichage clair du résultat FHIR en JSON.

Pas de design complexe (form simple, textarea, bouton, affichage JSON).

4. PROTECTION API PAR CLÉ API
Toutes les routes privées doivent vérifier la clé API envoyée :

Dans l'Authorization header (Bearer {clé}).

Refuser (401 Unauthorized) si la clé est invalide, absente, ou révoquée.

5. DOCUMENTATION
Swagger UI (OpenAPI) automatique disponible à /docs.

Chaque endpoint doit être décrit :

Path.

Méthode.

Body attendu.

Réponses possibles.

6. BASE DE DONNÉES
Uniquement SQLite (local).

Tables :

applications

api_keys

conversion_logs (si besoin de journaliser)

7. AUTRES CONSIGNES STRICTES
Utiliser TypeScript partout.

Logger les erreurs serveur proprement.

Gérer les erreurs 404, 500.

Démarrage automatique de la DB si inexistante.

Pas de design improvisé sur l'interface utilisateur.

Respecter les chemins standards :

pgsql
Copier
Modifier
src/
├── api/
│   ├── middleware/
│   ├── routes/
│   ├── services/
│   ├── db/
│   ├── utils/
│   └── server.ts
├── types/
└── frontend/
RÉSUMÉ DE LA MISSION
Tu reconstruis tout proprement.

Tu implémentes ce qui est demandé, rien de plus.

Tu fais fonctionner la conversion HL7 > FHIR live.

Tu protèges les routes avec API Key.

Tu documentes proprement en Swagger.

Tu fais une interface simple pour tester.

Aucune improvisation.

Pas de design inventé.

Pas d'erreur en production.